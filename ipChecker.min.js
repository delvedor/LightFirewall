/*
 * Project: IpChecker
 * Author: delvedor
 * Twitter: @delvedor
 * License: GNU GPLv2
 * GitHub: https://github.com/delvedor/ipChecker
 */
function IpChecker(t,e,p){_=this,this.time=t||6e5,this.attempts=e||4,this.redirectPage=p||!1,this.ipsTimeout={},this.ipsAttempts={}}var _;IpChecker.prototype={constructor:IpChecker},IpChecker.prototype.checkIp=function(t,e,p){var i=t.connection.remoteAddress;_.isTimeout[i]?_.redirectPage?e.redirect(_.redirectPage):e.end():_.ipsAttempts[i]>=_.attempts?(_.ipsTimeout[i]=setTimeout(function(){_.removeIpTimeout(i),_.removeIpAttempts(i)},_.time),_.redirectPage?e.redirect(_.redirectPage):e.end()):p()},IpChecker.prototype.numberOfAttempts=function(t){return _.ipsAttempts[t]?_.ipsAttempts[t]:0},IpChecker.prototype.maxAttempts=function(t){return _.ipsAttempts[t]&&_.ipsAttempts[t]>_.attempts?!0:!1},IpChecker.prototype.addIpAttempt=function(t){_.ipsAttempts[t]?_.ipsAttempts[t]=_.ipsAttempts[t]+1:_.ipsAttempts[t]=1},IpChecker.prototype.removeIpAttempts=function(t){_.ipsAttempts[t]&&delete _.ipsAttempts[t]},IpChecker.prototype.isTimeout=function(t){return _.ipsTimeout[t]?!0:!1},IpChecker.prototype.addIpTimeout=function(t,e,p,i){_.ipsTimeout[t]=setTimeout(function(){_.removeIpTimeout(t),_.removeIpAttempts(t)},e),_.ipsAttempts[t]=_.attempts,i?p.redirect(i):p.end()},IpChecker.prototype.removeIpTimeout=function(t){_.ipsTimeout[t]&&(clearTimeout(_.ipsTimeout[t]),delete _.ipsTimeout[t])},module.exports=IpChecker;