/*
 * Project: IpChecker
 * Author: delvedor
 * Twitter: @delvedor
 * License: GNU GPLv2
 * GitHub: https://github.com/delvedor/ipChecker
 */
function IpChecker(t,e,p){_=this,this.time=t||6e5,this.attempts=e||4,this.redirectPage=p||!1,this.ipsTimeout={},this.ipsAttempts={}}var _;IpChecker.prototype={constructor:IpChecker},IpChecker.prototype.checkIp=function(t,e,p){var i=t.connection.remoteAddress;if(_.isTimeout(i))_.redirectPage?e.redirect(_.redirectPage):e.end();else if(_.ipsAttempts[i]>=_.attempts){var s=new Date;s.setMilliseconds(s.getMilliseconds()+_.time),_.ipsTimeout[i]=s,_.redirectPage?e.redirect(_.redirectPage):e.end()}else p()},IpChecker.prototype.numberOfAttempts=function(t){return _.ipsAttempts[t]?_.ipsAttempts[t]:0},IpChecker.prototype.maxAttempts=function(t){return _.ipsAttempts[t]&&_.ipsAttempts[t]>=_.attempts?!0:!1},IpChecker.prototype.addIpAttempt=function(t){_.ipsAttempts[t]?_.ipsAttempts[t]=_.ipsAttempts[t]+1:_.ipsAttempts[t]=1},IpChecker.prototype.removeIpAttempts=function(t){_.ipsAttempts[t]&&delete _.ipsAttempts[t]},IpChecker.prototype.isTimeout=function(t){if(_.ipsTimeout[t]){var e=new Date;return e<_.ipsTimeout[t]?!0:(_.removeIpTimeout(t),_.removeIpAttempts(t),!1)}return!1},IpChecker.prototype.addIpTimeout=function(t,e,p,i){var s=new Date;s.setMilliseconds(s.getMilliseconds()+e),_.ipsTimeout[t]=s,_.ipsAttempts[t]=_.attempts,i?p.redirect(i):p.end()},IpChecker.prototype.removeIpTimeout=function(t){_.ipsTimeout[t]&&delete _.ipsTimeout[t]},module.exports=IpChecker;